.RC $Header: /nfs/medea/u0/rel5/rcs/Tools/cmusnmp/apps/snmpwalk_asy.1,v 1.2 1992/07/29 18:17:21 djw Exp $
.\* /***********************************************************
.\" 	Copyright 1988, 1989 by Carnegie Mellon University
.\" 
.\"                       All Rights Reserved
.\" 
.\" Permission to use, copy, modify, and distribute this software and its 
.\" documentation for any purpose and without fee is hereby granted, 
.\" provided that the above copyright notice appear in all copies and that
.\" both that copyright notice and this permission notice appear in 
.\" supporting documentation, and that the name of CMU not be
.\" used in advertising or publicity pertaining to distribution of the
.\" software without specific, written prior permission.  
.\" 
.\" CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
.\" ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
.\" CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
.\" ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
.\" WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
.\" ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
.\" SOFTWARE.
.\" ******************************************************************/
.TH SNMPWALK_ASY 1 "17 September 1989"
.UC 4
.SH NAME
snmpwalk_asy - communicates with a network entity using SNMP GET Next Requests.
.SH SYNOPSIS
snmpwalk_asy host community [variable-name]
.SH DESCRIPTION
Snmpwalk_asy is an SNMP application that uses GET NEXT Requests to
query for a tree of information about a network entity.  It uses the
asynchronous snmp library primitives-- compare its implementation to
snmpwalk's implementation.
.PP
The
.I host
specification may be either a host name or an internet address
specified in "dot notation"
.PP
The
.I community
specifies the community name for the transaction with the remote system.
.PP
A variable may also be given on the
command line.  This variable specifies which portion of the object identifier
space will be searched using GET NEXT Requests.  All variables in the subtree
below the given variable are queried and their values presented to the user.
Each variable name is given in the format specified in
.IR variables (5).
.PP
If the "variable-name" argument is not present, snmpwalk_asy will search the whole Internet MIB.
.PP
For example
.PP
.I snmpwalk_asy netdev-kbox.cc.cmu.edu public system
.PP
will retrieve the variables sysDescr.0 and sysObjectID.0 and sysUpTime.0:
.PP
.I Name: system.sysDescr.0
.br
.I OCTET STRING- (ascii):	Kinetics FastPath2
.PP
.I Name: system.sysObjectID.0
.br
.I OBJECT IDENTIFIER:  .iso.org.dod.internet.private.enterprises.CMU.sysID.CMU-KIP
.PP
.I Name: system.sysUpTime.0
.br
.I Timeticks: (2291082) 6:21:50
.PP
If the network entity has an error processing the request packet, an error
packet will be returned and a message will be shown, helping to pinpoint why
the request was malformed.
.PP
If the tree search causes attempts to search beyond the end of the MIB, a message
will be displayed:
.PP
.I End of MIB.
.PP
Adding a "-d" to the argument list will cause the application to dump input and output packets.
.PP
.SH "SEE ALSO"
variables(5), RFC 1065, RFC 1212, RFC 1213

